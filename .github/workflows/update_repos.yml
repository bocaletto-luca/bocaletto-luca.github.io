name: Update Repositories JSON

on:
  push:
    branches: [ main ]
  # Esempio di schedule: ogni giorno alle 00:00 UTC
  schedule:
    - cron: '0 0 * * *'

jobs:
  update-repos:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install node-fetch
        run: npm install node-fetch@2

      - name: Fetch GitHub Repositories and create repos.json
        env:
          GITHUB_USER: bocaletto-luca
          # Il token predefinito per GitHub Actions è sicuro, non verrà esposto
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          node -e "
          const fetch = require('node-fetch');
          const fs = require('fs');
          const user = process.env.GITHUB_USER;
          const token = process.env.GITHUB_TOKEN;
          let page = 1;
          let allRepos = [];
          async function fetchRepos() {
            while (true) {
              const response = await fetch(\`https://api.github.com/users/\${user}/repos?per_page=100&page=\${page}\`, {
                headers: { 'Authorization': \`token \${token}\` }
              });
              if(response.status !== 200) {
                console.error('Errore durante il fetch dei repository. Status:', response.status);
                break;
              }
              const repos = await response.json();
              if (!Array.isArray(repos) || repos.length === 0) break;
              allRepos = allRepos.concat(repos.map(repo => ({
                name: repo.name,
                description: repo.description,
                language: repo.language,
                html_url: repo.html_url
              })));
              console.log('Page', page, 'fetched:', repos.length, 'repos');
              page++;
            }
            fs.writeFileSync('repos.json', JSON.stringify(allRepos, null, 2));
            console.log('repos.json generated with', allRepos.length, 'repositories.');
          }
          fetchRepos();
          "

      - name: Commit and push repos.json
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add repos.json
          if git diff-index --quiet HEAD; then
            echo "No changes to commit";
          else
            git commit -m "Update repos.json";
            git push;
          fi
